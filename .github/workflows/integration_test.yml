name: Flutter Integration Test

on:
  pull_request:
    branches:
      - develop  # hoáº·c branch báº¡n muá»‘n báº£o vá»‡

permissions:
  contents: read
  pull-requests: write
jobs:
  integration_test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code tá»« repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Thiáº¿t láº­p Java (cáº§n thiáº¿t cho build Android)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle' # Cache Gradle dependencies

      # 3. Thiáº¿t láº­p Flutter SDK
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.32.0' # Thay báº±ng phiÃªn báº£n Flutter báº¡n Ä‘ang dÃ¹ng
          channel: 'stable' # Hoáº·c 'beta', 'dev', 'master'
          cache: true # Cache Flutter dependencies

      # 4. Láº¥y dependencies cá»§a Flutter
      - name: Get Flutter dependencies
        run: flutter pub

      - name: Run Integration Tests
        run: flutter test test/app_test.dart > test_output.log || true

      - name: Read test result and comment on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const log = fs.readFileSync('test_output.log', 'utf8');
            const maxLen = 65000;
            const comment = log.length > maxLen ? log.slice(0, maxLen) + '\n\n... truncated ...' : log;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ§ª **Flutter Integration Test Output**:\n\n\`\`\`\n${comment}\n\`\`\``
            });